defaults: &defaults
  docker:
    - image: circleci/node:10

version: 2
jobs:
  prepare:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  build:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Build
          command: npm run build
      - persist_to_workspace:
          root: .
          paths:
            - build
  test:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: npm run test
  deploy-gh:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace
          at: .
      - deploy:
          name: Deploy to GitHub Pages
          command: |
            set -e
            remote=$(git config remote.origin.url)
            if [ ! -d "build" ]
            then
              echo "build folder not found"
              exit 1
            fi
            mkdir gh-pages-branch
            cd gh-pages-branch
            git config --global user.email "$GH_EMAIL" > /dev/null 2>&1
            git config --global user.name "$GH_NAME" > /dev/null 2>&1
            git init
            git remote add --fetch origin "$remote"
            if git rev-parse --verify origin/gh-pages > /dev/null 2>&1
            then
                git checkout gh-pages
                git rm -rf .
            else
                git checkout --orphan gh-pages
            fi
            cp -a "../build/." .
            git add -A
            git commit --allow-empty -m "Deploy to GitHub pages [ci skip]"
            git push --force --quiet origin gh-pages > /dev/null 2>&1
            cd ..
            rm -rf gh-pages-branch
            echo "Finished GitHub pages Deployment!"

workflows:
  version: 2
  main_flow:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - build:
          requires:
            - test
      - deploy-gh:
          requires:
            - build
          filters:
            branches:
              only: master

